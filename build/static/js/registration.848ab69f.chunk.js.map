{"version":3,"file":"static/js/registration.848ab69f.chunk.js","mappings":"uKACA,EAA4B,6B,UCEb,SAASA,EAAU,GAAe,IAAbC,EAAQ,EAARA,SAClC,OAAO,gBAAKC,UAAWC,EAAY,SAAEF,GACvC,CCJA,MAA0B,yBCIX,SAASG,EAAQ,GAAgC,IAA9BC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUL,EAAQ,EAARA,SACjD,OACE,oBAASC,UAAWC,EAAU,UAC5B,UAACH,EAAS,YACR,eAAIE,UAAWI,EAAW,uBAAyB,eAAe,SAC/DD,IAEFJ,MAIT,C,8ECde,SAASM,EAAcC,GACpC,OAA0BC,EAAAA,EAAAA,UAASD,GAAW,eAAvCE,EAAK,KAAEC,EAAQ,KAMtB,MAAO,CAAED,MAAAA,EAAOC,SAAAA,EAAUC,aAJL,SAAH,GAA+B,IAAfC,EAAK,EAAfC,OAAUD,MAChCF,EAASE,EACX,EAGF,C,sLCTA,EAAuB,2BAAvB,EAA0D,4BAA1D,EAAoG,kC,UCYrF,SAASE,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAIIV,EAAAA,EAAAA,GAAc,IAHTW,EAAQ,EAAfR,MACUS,EAAW,EAArBR,SACcS,EAAoB,EAAlCR,aAEF,GAIIL,EAAAA,EAAAA,GAAc,IAHTc,EAAS,EAAhBX,MACUY,EAAY,EAAtBX,SACcY,EAAqB,EAAnCX,aAEF,GAIIL,EAAAA,EAAAA,GAAc,IAHTiB,EAAY,EAAnBd,MACUe,EAAe,EAAzBd,SACce,EAAwB,EAAtCd,aAEIe,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAUpBC,EAAY,WAChBX,EAAY,IACZG,EAAa,IACbG,EAAgB,GAClB,EAEA,OACE,UAACrB,EAAA,EAAO,CAACC,MAAM,kBAAkBC,UAAU,EAAM,WAC/C,kBAAMJ,UAAWC,EAAQ4B,SAhBA,SAAAC,GAC3BA,EAAIC,iBACJjB,GACEkB,EAAAA,EAAAA,IAAS,CAAEC,KAAMjB,EAAUkB,MAAOf,EAAWgB,SAAUb,KAEzDM,GACF,EAU4D,WACtD,SAACQ,EAAA,EAAS,CACRC,GAAG,iBACHC,MAAM,QACNC,QAAQ,WACRC,KAAK,OACLC,WAAW,EACXzC,UAAWC,EACXU,MAAOK,EACP0B,SAAUxB,KAEZ,SAACkB,EAAA,EAAS,CACRC,GAAG,iBACHC,MAAM,SACNC,QAAQ,WACRC,KAAK,QACLxC,UAAWC,EACXU,MAAOQ,EACPuB,SAAUrB,KAEZ,SAACe,EAAA,EAAS,CACRC,GAAG,iBACHC,MAAM,YACNC,QAAQ,WACRC,KAAK,WACLG,UAAQ,EACR3C,UAAWC,EACXU,MAAOW,EACPoB,SAAUlB,KAEZ,SAACoB,EAAA,EAAM,CACLL,QAAQ,YACRC,KAAK,SACLK,UACG7B,IAAaG,GAAaG,EAAawB,OAAS,EAEnD9C,UAAWC,EACX8C,SAAS,SAACC,EAAA,EAAQ,IAAI,6BAKzBvB,IACC,SAACwB,EAAA,EAAK,CACJC,GAAI,CACFC,MAAO,QACPC,OAAQ,YACRC,UAAW,EACXC,gBAAiB,QAEnBC,QAAS,EAAE,UAEX,SAACC,EAAA,EAAK,CACJC,SAAS,QACTlB,QAAQ,WACRmB,QAASC,YAAW,WAClB7C,GAAS8C,EAAAA,EAAAA,KACX,GAAG,KACHC,QACE,SAACjB,EAAA,EAAM,CACLkB,MAAM,UACNC,KAAK,QACLC,QAAS,WACPlD,GAAS8C,EAAAA,EAAAA,KACX,EAAE,mBAIL,SAEAnC,QAMb,C","sources":["webpack://my-new-repository/./src/components/Container/Container.module.css?9f71","components/Container/Container.js","webpack://my-new-repository/./src/components/Section/Section.module.css?dbe8","components/Section/Section.js","hooks/useFormFields.js","webpack://my-new-repository/./src/views/RegisterView/RegisterView.module.css?6d4e","views/RegisterView/RegisterView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import React from 'react';\nimport s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Container from '../Container';\nimport s from './Section.module.css';\n\nexport default function Section({ title, isHidden, children }) {\n  return (\n    <section className={s.section}>\n      <Container>\n        <h1 className={isHidden ? 'sectionTitleIsHidden' : 'sectionTitle'}>\n          {title}\n        </h1>\n        {children}\n      </Container>\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  isHidden: PropTypes.bool.isRequired,\n};\n","import { useState } from 'react';\n\nexport default function useFormFields(initialVal) {\n  const [state, setState] = useState(initialVal);\n\n  const handleChange = ({ target: { value } }) => {\n    setState(value);\n  };\n\n  return { state, setState, handleChange };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterView_form__q9n4X\",\"input\":\"RegisterView_input__UcX6h\",\"registerBtn\":\"RegisterView_registerBtn__JIgPI\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { TextField } from '@mui/material';\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport SendIcon from '@mui/icons-material/Send';\nimport useFormFields from 'hooks/useFormFields';\nimport Section from 'components/Section';\nimport { register } from 'redux/auth/authOperations';\nimport { getError } from 'redux/auth/authSelectors';\nimport { resetError } from 'redux/auth/authActions';\nimport s from './RegisterView.module.css';\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const {\n    state: userName,\n    setState: setUserName,\n    handleChange: handleUserNameChange,\n  } = useFormFields('');\n  const {\n    state: userEmail,\n    setState: setUserEmail,\n    handleChange: handleUserEmailChange,\n  } = useFormFields('');\n  const {\n    state: userPassword,\n    setState: setUserPassword,\n    handleChange: handleUserPasswordChange,\n  } = useFormFields('');\n  const error = useSelector(getError);\n\n  const handleRegisterSubmit = evt => {\n    evt.preventDefault();\n    dispatch(\n      register({ name: userName, email: userEmail, password: userPassword })\n    );\n    formReset();\n  };\n\n  const formReset = () => {\n    setUserName('');\n    setUserEmail('');\n    setUserPassword('');\n  };\n\n  return (\n    <Section title=\"Please register\" isHidden={false}>\n      <form className={s.form} onSubmit={handleRegisterSubmit}>\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Name:\"\n          variant=\"outlined\"\n          type=\"text\"\n          autoFocus={true}\n          className={s.input}\n          value={userName}\n          onChange={handleUserNameChange}\n        />\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Email:\"\n          variant=\"outlined\"\n          type=\"email\"\n          className={s.input}\n          value={userEmail}\n          onChange={handleUserEmailChange}\n        />\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Password:\"\n          variant=\"outlined\"\n          type=\"password\"\n          required\n          className={s.input}\n          value={userPassword}\n          onChange={handleUserPasswordChange}\n        />\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          disabled={\n            !userName || !userEmail || userPassword.length < 7 ? true : false\n          }\n          className={s.registerBtn}\n          endIcon={<SendIcon />}\n        >\n          Register now\n        </Button>\n      </form>\n      {error && (\n        <Stack\n          sx={{\n            width: '400px',\n            margin: '10px auto',\n            boxShadow: 8,\n            backgroundColor: '#fff',\n          }}\n          spacing={2}\n        >\n          <Alert\n            severity=\"error\"\n            variant=\"outlined\"\n            onClose={setTimeout(() => {\n              dispatch(resetError());\n            }, 2000)}\n            action={\n              <Button\n                color=\"inherit\"\n                size=\"small\"\n                onClick={() => {\n                  dispatch(resetError());\n                }}\n              >\n                Close\n              </Button>\n            }\n          >\n            {error}\n          </Alert>\n        </Stack>\n      )}\n    </Section>\n  );\n}\n"],"names":["Container","children","className","s","Section","title","isHidden","useFormFields","initialVal","useState","state","setState","handleChange","value","target","RegisterView","dispatch","useDispatch","userName","setUserName","handleUserNameChange","userEmail","setUserEmail","handleUserEmailChange","userPassword","setUserPassword","handleUserPasswordChange","error","useSelector","getError","formReset","onSubmit","evt","preventDefault","register","name","email","password","TextField","id","label","variant","type","autoFocus","onChange","required","Button","disabled","length","endIcon","Send","Stack","sx","width","margin","boxShadow","backgroundColor","spacing","Alert","severity","onClose","setTimeout","resetError","action","color","size","onClick"],"sourceRoot":""}